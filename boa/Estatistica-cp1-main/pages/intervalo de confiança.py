import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy import stats

# Verificar se os dados est√£o presentes no session state
if "data" not in st.session_state:
    st.error("Dados n√£o carregados no session state!")
    st.stop()

# Carregamento da base de dados
df = st.session_state["data"]

# Verificar se as colunas esperadas est√£o presentes no DataFrame
if "statistics_rating" not in df.columns or "home_or_away" not in df.columns:
    st.error("As colunas 'statistics_rating' ou 'home_or_away' n√£o est√£o presentes no DataFrame.")
    st.stop()

# T√≠tulo da p√°gina
st.title("üìò Intervalo de Confian√ßa (IC) - Desempenho do Jogador")

st.markdown("""
O **Intervalo de Confian√ßa (IC)** √© uma ferramenta estat√≠stica usada para estimar um par√¢metro populacional com base em uma amostra.

Em outras palavras, ele nos d√° uma **faixa de valores onde, com determinado grau de confian√ßa (ex: 95%)**, acreditamos que esteja o valor real da m√©dia populacional.

---
### üß™ F√≥rmula do IC para a m√©dia:

$$ IC = \\bar{x} \\pm z \\cdot \\frac{s}{\\sqrt{n}} $$

Onde:

- $\\bar{x}$ = m√©dia da amostra  
- $s$ = desvio padr√£o da amostra  
- $n$ = tamanho da amostra  
- $z$ = valor cr√≠tico da distribui√ß√£o normal (ex: 1.96 para 95% de confian√ßa)

---
""")

st.subheader("üîç Aplica√ß√£o pr√°tica")
st.markdown("Vamos aplicar o IC para comparar o **rating de desempenho** dos jogadores **em casa** e **fora de casa**.")

# Fun√ß√£o para intervalo de confian√ßa
def intervalo_confianca(amostra, confianca=0.95):
    media = np.mean(amostra)
    desvio = np.std(amostra, ddof=1)
    n = len(amostra)
    z = stats.norm.ppf((1 + confianca) / 2)
    erro = z * desvio / np.sqrt(n)
    return media, media - erro, media + erro

# Filtrar dados de "em casa" e "fora de casa"
rating_home = df[df['home_or_away'] == 'home']["statistics_rating"].dropna()
rating_away = df[df['home_or_away'] == 'away']["statistics_rating"].dropna()

# Aplicando a fun√ß√£o
media_home, ic_inf_home, ic_sup_home = intervalo_confianca(rating_home)
media_away, ic_inf_away, ic_sup_away = intervalo_confianca(rating_away)

# Exibi√ß√£o dos resultados
st.markdown(f"""
### üìä Intervalo de Confian√ßa para o Rating de Desempenho

- M√©dia **em casa**: {media_home:.2f}  
- Intervalo de confian√ßa (95%): [{ic_inf_home:.2f}, {ic_sup_home:.2f}]  
- M√©dia **fora**: {media_away:.2f}  
- Intervalo de confian√ßa (95%): [{ic_inf_away:.2f}, {ic_sup_away:.2f}]
""")

st.markdown("---")
st.markdown("""
üìå **Interpreta√ß√£o:**  
Se os intervalos **n√£o se sobrep√µem**, isso indica que a diferen√ßa entre o desempenho dos jogadores em casa e fora **√© estatisticamente significativa**. Caso contr√°rio, a diferen√ßa observada pode ser atribu√≠da ao acaso, e n√£o a um fator de desempenho real. 

---

### Como o Intervalo de Confian√ßa (IC) ser√° usado no projeto:

O **Intervalo de Confian√ßa (IC)** desempenha um papel crucial na an√°lise do desempenho dos jogadores ao permitir que possamos fazer afirma√ß√µes robustas sobre a diferen√ßa de desempenho entre condi√ß√µes como jogar em casa ou fora. 

Ao calcular o IC para as m√©dias de performance (como o **rating de desempenho**), podemos verificar se as varia√ß√µes observadas entre esses contextos s√£o estatisticamente significativas. Por exemplo, o IC nos ajuda a identificar se h√° uma diferen√ßa real no desempenho dos jogadores quando jogam em casa versus fora. Caso os intervalos de confian√ßa de ambos os contextos se sobreponham, n√£o podemos afirmar com confian√ßa que a performance dos jogadores √© diferente nesses dois cen√°rios.

Al√©m disso, o IC tamb√©m pode ser aplicado em outras m√©tricas de desempenho, como **gols e assist√™ncias**, **efici√™ncia de passes**, e at√© na compara√ß√£o entre **expected goals (xG)** e **gols reais**. Essas an√°lises podem destacar jogadores que, por exemplo, apresentam uma **alta taxa de xG**, mas com poucos gols marcados, o que pode sugerir uma **inefici√™ncia nas finaliza√ß√µes**. Aqui, o IC ajudar√° a confirmar se essa discrep√¢ncia √© estatisticamente relevante ou se pode ser explicada pela variabilidade natural dos dados.

Ao longo do projeto, o uso do IC possibilitar√° uma compreens√£o mais precisa das performances dos jogadores, oferecendo insights valiosos para **t√©cnicos, analistas e equipes** em busca de informa√ß√µes claras e baseadas em dados para decis√µes estrat√©gicas.

O **IC** n√£o s√≥ valida a consist√™ncia das medi√ß√µes, mas tamb√©m fornece uma base s√≥lida para **decis√µes baseadas em dados**, ajudando na interpreta√ß√£o do impacto de vari√°veis como o local de jogo ou a quantidade de minutos jogados no desempenho geral dos atletas. Dessa forma, ao aplicarmos o IC, garantimos que nossas an√°lises s√£o confi√°veis e com fundamento estat√≠stico robusto.
""")
def plot_ic():
    categorias = ['Em Casa', 'Fora de Casa']
    medias = [media_home, media_away]
    ic_inferiores = [ic_inf_home, ic_inf_away]
    ic_superiores = [ic_sup_home, ic_sup_away]
    
    erro_inferior = [media - inf for media, inf in zip(medias, ic_inferiores)]
    erro_superior = [sup - media for media, sup in zip(medias, ic_superiores)]

    plt.figure(figsize=(8, 6))
    bars = plt.bar(categorias, medias, yerr=[erro_inferior, erro_superior], capsize=10, color=['blue', 'orange'])

    plt.title('Intervalo de Confian√ßa para o Rating de Desempenho dos Jogadores')
    plt.xlabel('Local de Jogo')
    plt.ylabel('Rating de Desempenho')

    plt.ylim(min(ic_inferiores) - 0.5, 7)  

    st.pyplot(plt)
plot_ic()